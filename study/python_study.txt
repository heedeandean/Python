파이썬

고급프로그래밍 언어
인터프리터 언어
동적 타이핑 대화형 언어 
coroutine[코루틴] 지원 > Subroutine[서브루틴]
유니코드 제공 : 한글, 한자 사용 가능

현재 2/3버전 대로 나누어서 개발 중 (Why? 호환이 안되서)
하지만 언젠가는 3.x버전으로 옮겨야 함

장점(+)
1. 코드의 단순성과 표준성
2. 이식성
- 모든 os 환경에 연동, 다른 언어와 연동
- 플랫폼이 독립적 : 다양한 플랫폼에서 동작
3. 객체 지향 언어
4. 확장 가능한 라이브러리

단점(-)
GIL(Global Interpreter Lock) : CPython(C로 구현)의 인터프리터에서 동시에 
			오직 하나의 스레드만 동작하도록 허용함으로써 생기는 문제 
- 다중 스레드(Multi-Thread)의 성능이 떨어짐
  그래서 다중 프로세스(Multi-Process) 사용 권장
  다중 프로세싱 패키지를 제공해 스레드 이용하는 것과 비슷하게 구현하도록 지원중
  But, 다중 스레드보다 복잡한 문제 발생

---------------------------------------
◆ 구조
모듈(Module) : .py
패키지(Package) : 모듈들을 포함하는 하나의 디렉토리(directory)

◆  PVM(Python Virtual Machine) : CPU에 의해 직접 실행되는 C, C++보다 느림

◆ 파이썬의 내장함수(Built-in Functions)
- 쉘에서 dir()함수 입력시 내장함수 확인 가능
- 특별하게 선언하지 않고 어디서든 호출 가능

◆ 식별자
1. A-Z, a-z or 언더스코어(_)로 시작
2. @, $, % 사용 X
3. 대소문자 구분
4. 변수, 자료형, 서브루틴 등을 가리키는 토큰임
5. 단일 언더스코어(_)로 시작하는 식별자는 private라는 의미
6. 두개 언더스코어(__)로 시작하는 식별자는 강한 프라이빗(strong private)라는 의미
7. 두개 언더스코어(__)로 끝나는 식별자는 언어에 의해 정의된 특별한 이름을 의미

◆ 키워드 = 예약어

◆ 자료형
- Numbers
1. int (정수) 
2. float(실수)
3. complex(복소수)

◆ divmod(a, b) -> a/b 나눈 (몫, 나머지)

◆ 문자열 함수 종류
- swapcase() : 대문자 -> 소문자 / 소문자 -> 대문자
- title() : 모든 단어의 첫 문자만 대문자로 나머지는 소문자로 바꾼다.
- capitalize() : 문자열의 첫 글자만 대문자로 나머지는 소문자로 바꾼다.
- islower() : 모든 문자가 소문자이면 True 반환
- isupper() : 모든 문자가 대문자이면 True 반환
- lstrip() : 좌측 공백을 지운다.
- rstrip() : 우측 공백을 지운다.
- strip() : 양쪽 공백을 지운다.
- replace(str1, str2) : str1을 str2로 바꾼다.
- split() : 공백 문자를 기준으로 나누어서 리스트에 저장한다.
- split(sep) : sep를 시준으로 나누어서 리스트에 저장한다.
- isalnum() : 모든 문자가 알파벳 혹은 숫자면 True 반환
- isalpha() : 모든 문자가 알파벳이면 True 반환

◆ Tuples
- 수정 X
- () 사용

◆ List
- 수정 O
- [] 사용
- list.extend(seq) : list에 seq를 추가
- list.insert(index, obj) : index위치에 obj를 삽입
- list.pop(obj-list-1) : list의 마지막에 있는 원소를 리턴
- list.reverse() : list를 역순으로 재배치

◆ Dictionary(딕셔너리)
- {} 사용
- 대소문자 구분
- 정렬 X
- key : 변경 X / value : 변경 O
- key를 호출하면 value를 리턴하는 구조를 가짐
- key는 유일한 값
- keys() : key들을 모아놓은 리스트를 리턴
- values()
- items()
- clear() : 모든 내용을 삭제
- get(key) : key의 value를 반환
- has_key(key) 해당하는 key가 있는지 조사하여 참, 거짓으로 반환


- del ~ : 삭제

◆ Set
- {} 사용
- 중복 X
- 순서 O
- 집합연산을 통해 자료를 추출하고 싶을때 사용



★★★틀린문제 다시풀기!!★★★
1. Strings는 자료를 관리하는 Sequence에 해당된다.(o, x)








정답
1. o : Strings 이외에 List, Tuple등이 있다.